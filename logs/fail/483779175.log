Sending build context to Docker daemon   2.56kB
Step 1/12 : FROM    golang:1.7.5-alpine
1.7.5-alpine: Pulling from library/golang
79650cf9cc01: Pulling fs layer
464640cfc171: Pulling fs layer
91642f949d94: Pulling fs layer
f54033cc70b6: Pulling fs layer
759fb45e1976: Pulling fs layer
2eb8ce570e0c: Pulling fs layer
759fb45e1976: Waiting
2eb8ce570e0c: Waiting
f54033cc70b6: Waiting
91642f949d94: Verifying Checksum
91642f949d94: Download complete
79650cf9cc01: Download complete
464640cfc171: Verifying Checksum
464640cfc171: Download complete
79650cf9cc01: Pull complete
759fb45e1976: Verifying Checksum
759fb45e1976: Download complete
464640cfc171: Pull complete
2eb8ce570e0c: Verifying Checksum
2eb8ce570e0c: Download complete
91642f949d94: Pull complete
f54033cc70b6: Verifying Checksum
f54033cc70b6: Download complete
f54033cc70b6: Pull complete
759fb45e1976: Pull complete
2eb8ce570e0c: Pull complete
Digest: sha256:02fca0eb8d85d6b604146722203c2acef13171a1d494c4c73474f41423b3c39c
Status: Downloaded newer image for golang:1.7.5-alpine
 ---> ad5b584cc9b4
Step 2/12 : RUN     apk add -U git bash curl gcc musl-dev make
 ---> Running in 6603219ade54
fetch http://dl-cdn.alpinelinux.org/alpine/v3.4/main/x86_64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.4/community/x86_64/APKINDEX.tar.gz
(1/28) Upgrading musl (1.1.14-r14 -> 1.1.14-r16)
(2/28) Installing ncurses-terminfo-base (6.0_p20171125-r0)
(3/28) Installing ncurses-terminfo (6.0_p20171125-r0)
(4/28) Installing ncurses-libs (6.0_p20171125-r0)
(5/28) Installing readline (6.3.008-r4)
(6/28) Installing bash (4.3.42-r5)
Executing bash-4.3.42-r5.post-install
(7/28) Installing libssh2 (1.7.0-r0)
(8/28) Installing libcurl (7.60.0-r1)
(9/28) Installing curl (7.60.0-r1)
(10/28) Installing binutils-libs (2.26-r1)
(11/28) Installing binutils (2.26-r1)
(12/28) Installing gmp (6.1.0-r0)
(13/28) Installing isl (0.14.1-r0)
(14/28) Installing libgomp (5.3.0-r0)
(15/28) Installing libatomic (5.3.0-r0)
(16/28) Installing libgcc (5.3.0-r0)
(17/28) Installing pkgconf (0.9.12-r0)
(18/28) Installing pkgconfig (0.25-r1)
(19/28) Installing mpfr3 (3.1.2-r0)
(20/28) Installing mpc1 (1.0.3-r0)
(21/28) Installing libstdc++ (5.3.0-r0)
(22/28) Installing gcc (5.3.0-r0)
(23/28) Installing expat (2.2.0-r1)
(24/28) Installing pcre (8.38-r1)
(25/28) Installing git (2.8.6-r0)
(26/28) Upgrading musl-utils (1.1.14-r14 -> 1.1.14-r16)
(27/28) Installing make (4.1-r1)
(28/28) Installing musl-dev (1.1.14-r16)
Executing busybox-1.24.2-r13.trigger
OK: 116 MiB in 38 packages
Removing intermediate container 6603219ade54
 ---> 65e14fee555f
Step 3/12 : RUN     mkdir -p /go/src /go/bin /go/pkg
 ---> Running in 1ec7731e6e11
Removing intermediate container 1ec7731e6e11
 ---> 58f81b4f0047
Step 4/12 : RUN     export GLIDE=v0.11.1;         export TARGET=/go/src/github.com/Masterminds;         mkdir -p ${TARGET} &&         git clone https://github.com/Masterminds/glide.git ${TARGET}/glide &&         cd ${TARGET}/glide &&         git checkout $GLIDE &&         make build &&         cp ./glide /usr/bin/glide &&         cd / && rm -rf /go/src/* /go/bin/* /go/pkg/*
 ---> Running in bd9a80fabcb0
[91mCloning into '/go/src/github.com/Masterminds/glide'...
[0m[91mNote: checking out 'v0.11.1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at 91d42a7... Updated changelog for 0.11.1 release
[0mgo build -o glide -ldflags "-X main.version=v0.11.1" glide.go
Removing intermediate container bd9a80fabcb0
 ---> 7ba36b1b6d81
Step 5/12 : COPY    glide.yaml /manvendor/
COPY failed: stat /var/lib/docker/tmp/docker-builder939194995/glide.yaml: no such file or directory
